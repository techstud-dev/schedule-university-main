spring.application.name=schedule-university-main
spring.application.systemName=tchs
spring.application.version=0.0.1-SNAPSHOT
server.port=8080
logging.level.io.r2dbc.postgresql=DEBUG
logging.level.org.springframework.r2dbc=DEBUG
logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.org.apache.kafka.clients.consumer.ConsumerConfig=WARN
logging.level.org.apache.kafka.clients.producer.ProducerConfig=WARN

# Database config
spring.r2dbc.url=${DB_URL:r2dbc:postgresql://localhost:5432/schedule_university?currentSchema=tchs01}
spring.r2dbc.username=${DB_USER:abuser}
spring.r2dbc.password=${DB_PASSWORD:abuser}
hibernate.open-in-view=false

# Kafka prod config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER:localhost:9094}
kafka.topic.parsing-queue=${PARSE_QUEUE:PARSE_QUEUE}
kafka.topic.parsing-result=${PARSING_RESULT_QUEUE:PARSING_RESULT_QUEUE}
kafka.topic.parsing-failure=${PARSING_FAILURE_QUEUE:PARSING_FAILURE_QUEUE}
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.ssl.key-store-type=JKS
spring.kafka.ssl.trust-store-type=JKS
spring.kafka.listener.concurrency=${KAFKA_LISTEN_THREAD_COUNT:7}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.security.protocol=SSL
spring.kafka.ssl.key-password=${SSL_KEY_PASS:password}
spring.kafka.ssl.trust-store-location=${TRUST_STORE_LOCATION:kafka/kafka.client.truststore.jks}
spring.kafka.ssl.trust-store-password=${TRUST_STORE_PASSWORD:password}
spring.kafka.ssl.key-store-location=${KEY_STORE_LOCATION:kafka/kafka.client.keystore.jks}
spring.kafka.ssl.key-store-password=${KEY_STORE_PASSWORD:password}
spring.kafka.admin.enabled=false


# Metrics Grafana
management.server.port=8091
management.endpoints.web.exposure.include=health,prometheus
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram."[http.server.requests]"=true

